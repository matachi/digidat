QA12 - MC68HC12 Absolute crossassembler, Version 1.6.3
(c) GMV 1989-2011


File: Main.lst
001000                      1. 		ORG	$1000
---- File: "C:\Users\zapray\Documents\worthless stuff\labbgrejer\Main.asm"
                            2. 		USE	Labdefs.s12
---- File: "Labdefs.s12"
                            3. 		#DEFINE	RUNFAST
                            4. 		#DEFINE	SIMULATOR
                            5. ;DipSwitch	EQU	$0600
       0000 0700            6. HexDisplay	EQU	$0700
       0000 0400            7. DrillControl	EQU	$0400
                            8. #ifdef SIMULATOR
       0000 0401            9. DrillStatus	EQU	$0401
                           12. #endif
       0000 0500           13. OutPort		EQU	$0500
       0000 0600           14. InPort		EQU	$0600
                           15. ;#ifdef		FAST
                           16. ;DelayConst	FCB	$FF
                           17. ;#else
                           18. ;#endif
                           19. 
                           20. #ifdef SIMULATOR
                           21. #ifdef RUNFAST
       0000 0003           22. DelayConst	EQU	$3
                           25. #endif
                           28. #endif
                           29. 
                           30. 
                           31. ;#ifndef 	DELCONST
                           32. ;DelayConst	EQU	$02	;FDB
                           33. ;#define 	DELCONST
                           34. ;#endif
                           35. 
---- File: "C:\Users\zapray\Documents\worthless stuff\labbgrejer\Main.asm"
                           36. ; MAIN +++++++++++++++++++++++++++++++++		
001000                     37. main:
001000 18 0B 00 04 00      38. 		MOVB	#$00,DrillControl
001005 18 0B 00 10 66      39. 		MOVB	#$00,DCShadow
                           40. 
00100A                     41. main_loop:
00100A 16 10 50            42. 		JSR	CheckKbdML15
00100D A7                  43. 		NOP
00100E 16 10 13            44. 		JSR	Command
001011 20 F7               45. 		BRA	main_loop
                           46. 
                           47. ; COMMAND ++++++++++++++++++++++++++++++
001013                     48. Command:	
001013 C1 07               49. 		CMPB	#7
001015 22 08               50. 		BHI	CommandExit
001017 CE 10 20            51. 		LDX	#JUMPTAB
00101A 58                  52. 		ASLB
00101B                     53. 		LDX	B,X
00101D 15 00               54. 		JSR	,X
00101F 3D                  55. CommandExit:	RTS
                           56. 
001020 10 30 10 34 10 38   57. JUMPTAB		FDB	SUB0,SUB1,SUB2,SUB3,SUB4,SUB5,SUB6,SUB7
       10 3C 10 40 10 44
       10 48 10 4C      
                           58. 
001030 16 10 C4            59. SUB0:		JSR	MotorStart
001033 3D                  60. 		RTS
001034 16 10 D8            61. SUB1:		JSR	MotorStop
001037 3D                  62. 		RTS
001038 16 10 DE            63. SUB2:		JSR	DrillDown
00103B 3D                  64. 		RTS
00103C 16 10 E4            65. SUB3:		JSR	DrillUp
00103F 3D                  66. 		RTS
001040 16 11 72            67. SUB4:		JSR	Step
001043 3D                  68. 		RTS
001044 16 11 BF            69. SUB5:		JSR	DrillHole
001047 3D                  70. 		RTS
001048 16 11 16            71. SUB6:		JSR	RefPos
00104B 3D                  72. 		RTS
00104C 16 11 46            73. SUB7:		JSR	DoAuto
00104F 3D                  74. 		RTS
                           75. 
                           76. ; CHECKKBDML15 ++++++++++++++++++++++++++
                           77. ;CheckKbdML15:
                           78. ;		LDAB	InPort
                           79. ;		RTS
001050 F6 06 00            80. CheckKbdML15:	LDAB	InPort
001053 C1 80               81. 		CMPB	#$80
001055 25 05               82. 		BLO	TangentNere ; Om mindre än 1000 0000, då är data available, hoppa till TangentNere
001057 C6 FF               83. TangentUppe:	LDAB	#$FF
001059 06 10 65            84. 		JMP	return
00105C 37                  85. TangentNere:	PSHB
00105D F6 06 00            86. TngentFortfNer:	LDAB	InPort
001060 C1 80               87. 		CMPB	#$80
001062 25 F9               88. 		BLO	TngentFortfNer ; Tangenten är fortfarande nere, loopa tills den är uppe
001064 33                  89. 		PULB
001065 3D                  90. return:		RTS		
001066                     91. 		
001066                     92. 		
                           93. 		USE	Subroutines.s12---- File: "Subroutines.s12"
                           94. 		USE	Labdefs.s12
---- File: "Labdefs.s12"
                           95. 		#DEFINE	RUNFAST
                           96. 		#DEFINE	SIMULATOR
                           97. ;DipSwitch	EQU	$0600
       0000 0700           98. HexDisplay	EQU	$0700
       0000 0400           99. DrillControl	EQU	$0400
                          100. #ifdef SIMULATOR
       0000 0401          101. DrillStatus	EQU	$0401
                          104. #endif
       0000 0500          105. OutPort		EQU	$0500
       0000 0600          106. InPort		EQU	$0600
                          107. ;#ifdef		FAST
                          108. ;DelayConst	FCB	$FF
                          109. ;#else
                          110. ;#endif
                          111. 
                          112. #ifdef SIMULATOR
                          113. #ifdef RUNFAST
       0000 0003          114. DelayConst	EQU	$3
                          117. #endif
                          120. #endif
                          121. 
                          122. 
                          123. ;#ifndef 	DELCONST
                          124. ;DelayConst	EQU	$02	;FDB
                          125. ;#define 	DELCONST
                          126. ;#endif
001066                    127. 	
---- File: "Subroutines.s12"
001066 00                 128. DCShadow	RMB	1
001067 00 01 01 01 01 01  129. Pattern:	FCB	0,1,1,1,1,1,1,1,2,1,5,2,2,2,2,4,4,3,8,2,$FF
       01 01 02 01 05 02
       02 02 02 04 04 03
       08 02 FF         
00107C 00                 130. tmp		RMB	1
                          131. 
00107D 36                 132. Outzero:	PSHA
00107E 37                 133. 		PSHB
00107F C1 07              134. 		CMPB	#7
001081 22 1D              135. 		BHI	Outzero_return
001083 86 01              136. 		LDAA	#1
001085 C1 00              137. Outzero_LSLA:	CMPB	#0		; denna loopen flyttar biten i A till rätt plats
001087 27 05              138. 		BEQ	Outzero_LSLA_k
001089 48                 139. 		LSLA
00108A 53                 140. 		DECB
00108B 06 10 85           141. 		JMP	Outzero_LSLA
00108E 41                 142. Outzero_LSLA_k:	COMA
00108F 7A 10 7C           143. 		STAA	tmp
001092 F6 10 66           144. 		LDAB	DCShadow
001095 F4 10 7C           145. 		ANDB	tmp
001098 7B 10 66           146. 		STAB	DCShadow
00109B 7B 04 00           147. 		STAB	DrillControl
00109E 33                 148. 		PULB
00109F 32                 149. 		PULA
0010A0 3D                 150. Outzero_return:	RTS
0010A1                    151. 		
0010A1 36                 152. Outone:		PSHA
0010A2 37                 153. 		PSHB
0010A3 C1 07              154. 		CMPB	#7
0010A5 22 1C              155. 		BHI	Outone_return
0010A7 86 01              156. 		LDAA	#1
0010A9 C1 00              157. Outone_LSLA:	CMPB	#0		; denna loopen flyttar biten i A till rätt plats
0010AB 27 05              158. 		BEQ	Outone_LSLA_k
0010AD 48                 159. 		LSLA
0010AE 53                 160. 		DECB
0010AF 06 10 A9           161. 		JMP	Outone_LSLA
0010B2 F6 10 66           162. Outone_LSLA_k:	LDAB	DCShadow
0010B5 7A 10 7C           163. 		STAA	tmp
0010B8 FA 10 7C           164. 		ORAB	tmp
0010BB 7B 10 66           165. 		STAB	DCShadow
0010BE 7B 04 00           166. 		STAB	DrillControl
0010C1 33                 167. 		PULB
0010C2 32                 168. 		PULA
0010C3 3D                 169. Outone_return	RTS
0010C4                    170. 		
0010C4 F6 10 66           171. MotorStart:	LDAB	DCShadow
0010C7 C4 04              172. 		ANDB	#$04		; Kolla om borr e igng. bit nr 2
0010C9 C1 04              173. 		CMPB	#$04
0010CB 27 0A              174. 		BEQ	MotorStartExit	; Om bit nr 2 e 1 e motorn redan igng, exita då
0010CD C6 02              175. 		LDAB	#2
0010CF 16 10 A1           176. 		JSR	Outone		; starta motor
0010D2 C6 04              177. 		LDAB	#4
0010D4 16 11 C9           178. 		JSR	Delay
0010D7 3D                 179. MotorStartExit:	RTS
                          180. 
0010D8 C6 02              181. MotorStop:	LDAB	#2		; stanna motor, bit 2
0010DA 06 10 7D           182. 		JMP	Outzero
0010DD 3D                 183. 		RTS
0010DE                    184. 		
0010DE C6 03              185. DrillDown:	LDAB	#3
0010E0 16 10 A1           186. 		JSR	Outone		; lower drill
0010E3 3D                 187. 		RTS
0010E4                    188. 		
0010E4 37                 189. DrillUp:	PSHB
0010E5 C6 03              190. 		LDAB	#3
0010E7 16 10 7D           191. 		JSR	Outzero		; pull up drill
0010EA F6 04 01           192. DrillUp_loop:	LDAB	DrillStatus	; loop until drill is up again
0010ED C4 02              193. 		ANDB	#$2
0010EF C1 02              194. 		CMPB	#$2
0010F1 26 F7              195. 		BNE	DrillUp_loop
0010F3 33                 196. 		PULB
0010F4 3D                 197. 		RTS
0010F5                    198. 		
0010F5 C1 00              199. Alarm:		CMPB	#0
0010F7 27 1C              200. 		BEQ	Alarm_return	; om antalet loopar är 0, returnera
0010F9 37                 201. Alarm_loop:	PSHB
0010FA C6 04              202. 		LDAB	#4		; bit 4 ska ändras för att modda larmet
0010FC 16 10 A1           203. 		JSR	Outone		; starta larmet
0010FF 16 11 C9           204. 		JSR	Delay		; vänta en stund
001102 16 10 7D           205. 		JSR	Outzero		; stoppa larmet
001105 33                 206. 		PULB
001106 53                 207. 		DECB			; minska b, vilket är antalet loopar
001107 C1 00              208. 		CMPB	#0
001109 27 0A              209. 		BEQ	Alarm_return	; om antalet loopar är 0, returnera
00110B 37                 210. 		PSHB
00110C C6 02              211. 		LDAB	#2
00110E 16 11 C9           212. 		JSR	Delay		; låt larmet vara tyst en stund
001111 33                 213. 		PULB
001112 06 10 F9           214. 		JMP	Alarm_loop	; kör larmet en gång till
001115 3D                 215. Alarm_return:	RTS
                          216. 
001116 B6 04 01           217. RefPos:		LDAA	DrillStatus
001119 84 01              218. 		ANDA	#$01
00111B 81 01              219. 		CMPA	#$01
00111D 27 0A              220. 		BEQ	RefPosReturn1
00111F 16 11 72           221. 		JSR	Step
001122 8E 00 00           222. 		CPX	#0
001125 27 05              223. 		BEQ	RefPosReturn0
001127 20 ED              224. 		BRA	RefPos
001129 C6 01              225. RefPosReturn1:	LDAB	#1
00112B 3D                 226. 		RTS
00112C                    227. 		
00112C C6 00              228. RefPosReturn0:	LDAB	#0
00112E 3D                 229. 		RTS
00112F                    230. 		
00112F                    231. Nstep: ;parameter : (register B)
00112F C1 00              232. 		CMPB	#0
001131 27 10              233. 		BEQ	endNstep1
001133 53                 234. 		DECB
001134 37                 235. 		PSHB
001135 16 11 72           236. 		JSR	Step
001138 C1 00              237. 		CMPB	#0
00113A 27 03              238. 		BEQ	endNstep0
00113C 33                 239. 		PULB
00113D 20 F0              240. 		BRA	Nstep
00113F 33                 241. endNstep0:	PULB	;fixa stackpekare
001140 C6 00              242. 		LDAB	#0
001142 3D                 243. 		RTS
001143 C6 01              244. endNstep1:	LDAB	#1
001145 3D                 245. 		RTS
001146                    246. 		
001146 CE 10 67           247. DoAuto:		LDX	#Pattern
001149 16 11 4D           248. 		JSR	Auto
00114C 3D                 249. 		RTS
00114D                    250. 		
00114D                    251. Auto:;Parameter (x)
00114D 16 11 16           252. 		JSR	RefPos
001150 C1 00              253. 		CMPB	#0
001152 27 1A              254. 		BEQ	endAuto1
001154 16 10 C4           255. 		JSR	MotorStart
001157                    256. nextHole:	LDAB	,X
001159 08                 257. 		INX
00115A C1 FF              258. 		CMPB	#$FF
00115C 27 10              259. 		BEQ	endAuto1
00115E 16 11 2F           260. 		JSR	Nstep
001161 C1 00              261. 		CMPB	#0
001163 27 09              262. 		BEQ	endAuto1
001165 16 11 BF           263. 		JSR	DrillHole
001168 C1 00              264. 		CMPB	#0
00116A 27 02              265. 		BEQ	endAuto1
00116C 20 E9              266. 		BRA	nextHole
00116E 16 10 D8           267. endAuto1:	JSR	MotorStop
001171 3D                 268. 		RTS
                          269. 
001172                    270. 		
001172 F6 04 01           271. Step:		LDAB	DrillStatus
001175 C5 02              272. 		BITB	#2
001177 27 17              273. 		BEQ	Step_alarm	; om borren inte är uppe, kör alarmet
001179 C6 01              274. 		LDAB	#1
00117B 16 10 A1           275. 		JSR	Outone		; sätt vridning till moturs
00117E C6 00              276. 		LDAB	#0
001180 16 10 A1           277. 		JSR	Outone		; ge stegpuls
001183 C6 02              278. 		LDAB	#2
001185 16 11 C9           279. 		JSR	Delay		; vänta en stund
001188 C6 00              280. 		LDAB	#0
00118A 16 10 7D           281. 		JSR	Outzero		; ändra tillbaka stegpulsen
00118D C6 01              282. 		LDAB	#1
00118F 3D                 283. 		RTS
001190 C6 02              284. Step_alarm:	LDAB	#2
001192 16 10 F5           285. 		JSR	Alarm		; kör larmet 2 ggr
001195 C6 00              286. 		LDAB	#0
001197 3D                 287. 		RTS
001198                    288. 		
001198 F6 10 66           289. DrillDownTest:	LDAB	DCShadow
00119B C5 04              290. 		BITB	#4
00119D 27 15              291. 		BEQ	DrillDwnTst_rA	; om borrmaskinen ej är igång, returnera med alarm
00119F 86 14              292. 		LDAA	#20		; max 20 kollar
0011A1 F6 04 01           293. DrillDown_loop:	LDAB	DrillStatus
0011A4 C5 04              294. 		BITB	#4		; kolla om bit 2 är 0
0011A6 26 14              295. 		BNE	DrillDwnTest_r	; om nere, retunera "safe"
0011A8 37                 296. 		PSHB
0011A9 C6 01              297. 		LDAB	#1
0011AB 16 11 C9           298. 		JSR	Delay		; vänta en stund
0011AE 33                 299. 		PULB
0011AF 43                 300. 		DECA			; minska antalet retries
0011B0 81 00              301. 		CMPA	#0
0011B2 26 ED              302. 		BNE	DrillDown_loop	; kolla en gång till om borren är igenom metallen
0011B4 C6 02              303. DrillDwnTst_rA:	LDAB	#2
0011B6 16 10 F5           304. 		JSR	Alarm		; returnerar med alarm
0011B9 C6 00              305. 		LDAB	#0
0011BB 3D                 306. 		RTS			; retunera med 0 i B, alltså kom borret aldrig ner
0011BC C6 01              307. DrillDwnTest_r:	LDAB	#1
0011BE 3D                 308. 		RTS
                          309. 
0011BF 16 10 DE           310. DrillHole:	JSR	DrillDown
0011C2 16 11 98           311. 		JSR	DrillDownTest
0011C5 16 10 E4           312. 		JSR	DrillUp
0011C8 3D                 313. 		RTS
0011C9                    314. 		
0011C9                    315. 		
0011C9                    316. 		
0011C9 37                 317. Delay:		PSHB
0011CA 34                 318. 		PSHX
0011CB 35                 319. 		PSHY
0011CC C1 00              320. repeat:		CMPB	#0
0011CE 27 17              321. 		BEQ	Delay_return
0011D0 CE 00 03           322. 		LDX	#DelayConst
0011D3 1A 1F              323. NEXT:		LEAX	-1,X
0011D5 CD 00 64           324. 		LDY	#100
0011D8 19 5F              325. NEXT2:		LEAY	-1,Y
0011DA 8D 00 00           326. 		CPY	#0
0011DD 26 F9              327. 		BNE	NEXT2
0011DF 8E 00 00           328. 		CPX	#0
0011E2 26 EF              329. 		BNE	NEXT
0011E4 53                 330. 		DECB
0011E5 20 E5              331. 		BRA	repeat
0011E7 31                 332. Delay_return	PULY
0011E8 30                 333. 		PULX
0011E9 33                 334. 		PULB
0011EA 3D                 335. 		RTS
0011EB                    336. 		