QA12 - MC68HC12 Absolute crossassembler, Version 1.6.3
(c) GMV 1989-2012


File: Subroutines.lst
                            1. 		USE	Labdefs.s12
---- File: "Labdefs.s12"
                            2. ;#define RUNFAST
                            3. ;DipSwitch	EQU	$0600
       0000 0700            4. HexDisplay	EQU	$0700
       0000 0400            5. DrillControl	EQU	$0400
       0000 0401            6. DrillStatus	EQU	$0401
       0000 0500            7. OutPort		EQU	$0500
       0000 0600            8. InPort		EQU	$0600
                            9. ;#ifdef		FAST
                           10. ;DelayConst	FCB	$FF
                           11. ;#else
                           12. ;#endif
                           13. 
000000                     14. #ifdef RUNFAST
                           16. #else
       0000 0003           17. DelayConst EQU $3
                           18. #endif
                           19. 
                           20. 
                           21. ;#ifndef 	DELCONST
                           22. ;DelayConst	EQU	$02	;FDB
                           23. ;#define 	DELCONST
                           24. ;#endif
000000                     25. 	
---- File: "Z:\home\matachi\programming\mc12\upg88\Subroutines.s12"
000000 00                  26. DCShadow	RMB	1
000001 00                  27. tmp		RMB	1
                           28. 
000002 36                  29. Outzero:	PSHA
000003 37                  30. 		PSHB
000004 C1 07               31. 		CMPB	#7
000006 22 1D               32. 		BHI	Outzero_return
000008 86 01               33. 		LDAA	#1
00000A C1 00               34. Outzero_LSLA:	CMPB	#0		; denna loopen flyttar biten i A till rätt plats
00000C 27 05               35. 		BEQ	Outzero_LSLA_k
00000E 48                  36. 		LSLA
00000F 53                  37. 		DECB
000010 06 00 0A            38. 		JMP	Outzero_LSLA
000013 41                  39. Outzero_LSLA_k:	COMA
000014 7A 00 01            40. 		STAA	tmp
000017 F6 00 00            41. 		LDAB	DCShadow
00001A F4 00 01            42. 		ANDB	tmp
00001D 7B 00 00            43. 		STAB	DCShadow
000020 7B 04 00            44. 		STAB	DrillControl
000023 33                  45. 		PULB
000024 32                  46. 		PULA
000025 3D                  47. Outzero_return:	RTS
000026                     48. 		
000026 36                  49. Outone:		PSHA
000027 37                  50. 		PSHB
000028 C1 07               51. 		CMPB	#7
00002A 22 1C               52. 		BHI	Outone_return
00002C 86 01               53. 		LDAA	#1
00002E C1 00               54. Outone_LSLA:	CMPB	#0		; denna loopen flyttar biten i A till rätt plats
000030 27 05               55. 		BEQ	Outone_LSLA_k
000032 48                  56. 		LSLA
000033 53                  57. 		DECB
000034 06 00 2E            58. 		JMP	Outone_LSLA
000037 F6 00 00            59. Outone_LSLA_k:	LDAB	DCShadow
00003A 7A 00 01            60. 		STAA	tmp
00003D FA 00 01            61. 		ORAB	tmp
000040 7B 00 00            62. 		STAB	DCShadow
000043 7B 04 00            63. 		STAB	DrillControl
000046 33                  64. 		PULB
000047 32                  65. 		PULA
000048 3D                  66. Outone_return	RTS
000049                     67. 		
000049 F6 00 00            68. MotorStart:	LDAB	DCShadow
00004C C4 04               69. 		ANDB	#$04		; Kolla om borr e igng. bit nr 2
00004E C1 04               70. 		CMPB	#$4
000050 27 08               71. 		BEQ	MotorStartExit	; Om bit nr 2 e 1 e motorn redan igng, exita då
000052 C6 02               72. 		LDAB	#2
000054 16 00 26            73. 		JSR	Outone		; starta motor
000057 16 00 E1            74. 		JSR	Delay
00005A 3D                  75. MotorStartExit:	RTS
                           76. 
00005B C6 02               77. MotorStop:	LDAB	#2		; stanna motor, bit 2
00005D 06 00 02            78. 		JMP	Outzero
000060 3D                  79. 		RTS
000061                     80. 		
000061 C6 03               81. DrillDown:	LDAB	#3
000063 16 00 26            82. 		JSR	Outone		; lower drill
000066 16 00 E1            83. 		JSR	Delay		; wait for drill to start completely
000069 3D                  84. 		RTS
00006A                     85. 		
00006A C6 03               86. DrillUp:	LDAB	#3
00006C 16 00 02            87. 		JSR	Outzero		; pull up drill
00006F F6 04 01            88. DrillUp_loop:	LDAB	DrillStatus	; loop until drill is up again
000072 C4 02               89. 		ANDB	#$2
000074 C1 02               90. 		CMPB	#$2
000076 26 F7               91. 		BNE	DrillUp_loop
000078 3D                  92. 		RTS
000079                     93. 		
000079 C1 00               94. Alarm:		CMPB	#0
00007B 27 18               95. 		BEQ	Alarm_return	; om antalet loopar är 0, returnera
00007D 37                  96. Alarm_loop:	PSHB
00007E C6 04               97. 		LDAB	#4		; bit 4 ska ändras för att modda larmet
000080 16 00 26            98. 		JSR	Outone		; starta larmet
000083 16 00 E1            99. 		JSR	Delay		; vänta en stund
000086 16 00 02           100. 		JSR	Outzero		; stoppa larmet
000089 33                 101. 		PULB
00008A 53                 102. 		DECB			; minska b, vilket är antalet loopar
00008B C1 00              103. 		CMPB	#0
00008D 27 06              104. 		BEQ	Alarm_return	; om antalet loopar är 0, returnera
00008F 16 00 E1           105. 		JSR	Delay		; låt larmet vara tyst en stund
000092 06 00 7D           106. 		JMP	Alarm_loop	; kör larmet en gång till
000095 3D                 107. Alarm_return:	RTS
                          108. 
000096 F6 04 01           109. Step:		LDAB	DrillStatus
000099 C5 02              110. 		BITB	#2
00009B 27 11              111. 		BEQ	Step_alarm	; om borren inte är uppe, kör alarmet
00009D C6 01              112. 		LDAB	#1
00009F 16 00 26           113. 		JSR	Outone		; sätt vridning till moturs
0000A2 C6 00              114. 		LDAB	#0
0000A4 16 00 26           115. 		JSR	Outone		; ge stegpuls
0000A7 16 00 E1           116. 		JSR	Delay		; vänta en stund
0000AA 16 00 02           117. 		JSR	Outzero		; ändra tillbaka stegpulsen
0000AD 3D                 118. 		RTS
0000AE C6 02              119. Step_alarm:	LDAB	#2
0000B0 16 00 79           120. 		JSR	Alarm		; kör larmet 2 ggr
0000B3 3D                 121. 		RTS
0000B4                    122. 		
0000B4 F6 00 00           123. DrillDownTest:	LDAB	DCShadow
0000B7 C5 04              124. 		BITB	#4
0000B9 26 11              125. 		BNE	DrillDwnTst_rA	; om borrmaskinen ej är igång, returnera med alarm
0000BB 86 14              126. 		LDAA	#20		; max 20 kollar
0000BD F6 04 01           127. DrillDown_loop:	LDAB	DrillStatus
0000C0 C5 04              128. 		BITB	#4		; kolla om bit 2 är 0
0000C2 26 10              129. 		BNE	DrillDwnTest_r	; om nere, retunera "safe"
0000C4 16 00 E1           130. 		JSR	Delay		; vänta en stund
0000C7 43                 131. 		DECA			; minska antalet retries
0000C8 81 00              132. 		CMPA	#0
0000CA 26 F1              133. 		BNE	DrillDown_loop	; kolla en gång till om borren är igenom metallen
0000CC C6 02              134. DrillDwnTst_rA:	LDAB	#2
0000CE 16 00 79           135. 		JSR	Alarm		; returnerar med alarm
0000D1 C6 00              136. 		LDAB	#0
0000D3 3D                 137. 		RTS			; retunera med 0 i B, alltså kom borret aldrig ner
0000D4 C6 01              138. DrillDwnTest_r:	LDAB	#1
0000D6 3D                 139. 		RTS
                          140. 
0000D7 16 00 61           141. DrillHole:	JSR	DrillDown
0000DA 16 00 B4           142. 		JSR	DrillDownTest
0000DD 16 00 6A           143. 		JSR	DrillUp
0000E0 3D                 144. 		RTS
0000E1                    145. 		
0000E1 34                 146. Delay:		PSHX
0000E2 CE 00 03           147. 		LDX	#DelayConst
0000E5 09                 148. Delay_loop:	DEX
0000E6 8E 00 00           149. 		CPX	#0
0000E9 26 FA              150. 		BNE	Delay_loop
0000EB 30                 151. 		PULX
0000EC 3D                 152. 		RTS
0000ED                    153. 		